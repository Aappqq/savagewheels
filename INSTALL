_.o0 Savage Wheels installation instructions 0o._

Last updated on 07 Jun 2013

1) Supported platforms
  * Linux x86/x64 - Tested on Archlinux/Ubuntu/Debian
  * Windows x86/x64 - Tested on Windows XP/Vista/2008R2

2) Required files

Get the latest source code from GitHub:

    git clone git://github.com/petarov/savagewheels.git savagewheels

Get the data files archive 'savagewheels-gamedata.tar.gz' from 
https://code.google.com/p/savagewheels. Extract the downloaded archive into the bin/ folder. 
This archive should contain the folders: autos/, graphics/ and  sounds/.

3) Installation on Linux platforms

3.1) Requirements:
  * CMake 2.8.x
  * libSDL 1.2.x - You should install libSDL using your package manager.
  * FMod Ex API 4.x - Install using your package manager or get the package from FMod's website.
  * (Ubuntu specific) Install 'build-essential' package.

3.2) Instructions

	a) Install the libSDL package using the package manager on your Linux distribution.

	b) Install the FMod Ex package using the package manager on your Linux distribution or get 
	the package from FMod's website.

	c) Run the build script - build.sh
   	$ ./build.sh
   
   	d) Go to the 'release/' subfolder. Extract the produced archive file, 
   	e.g., savagewheels-1.5.0-Linux-x64.sh, to your (desired) Games folder.
   	
	e) Start the game run:
	$ ./savagewheels  
	or
	$ ./run.sh
	
	The 'run.sh' script will attempt to set the LD_LIBRARY_PATH in case you are missing libSDL
	or FModEx shared object libraries.
   
	If you experience problems with the automated 'build.sh' script you can try to build manually.
   
	a) You can also run CMake manually. Go to the release/ sub folder and run.
	$ cmake -G "Unix Makefiles" ../ -DCMAKE_BUILD_TYPE:STRING=Release
   
	Or to build without sound & music run:
	$ cmake -G "Unix Makefiles" ../ -DCMAKE_BUILD_TYPE:STRING=Release -DSOUND=NO

	b) Build with:
	$ make
   
	c) Create the installation package with:
	$ cpack
	
3.2.1) Debian package
	
	Debian/Ubuntu users may run:
	$ cpack -G DEB
	This will create a .deb package that you can install with, e.g.,
	$ dpkg -i savagewheels-1.5.0-Linux-x64.deb

3.2.2) Compile 32-bit version on 64-bit Linux

	This requires that you have the 'gcc-multilib' package installed on your system.
	You will also need to have 32-bit versions of libSDL.so and fmodex.so.
	
	After all required packages are installed build the makefile by running:
	$ cmake -G "Unix Makefiles" ../ -DCMAKE_BUILD_TYPE:STRING=Release -DM32=1

4) Installation on Windows

4.1) Requirements
  * MinGW (Minimalist GNU for Windows). I have only tested with Mingw32.
  * CMake 2.8.x
  * libSDL 1.2.x - Download the Development Libraries archive.
  * FMod Ex API 4.x - Download and install the FMOD Ex API installer EXE from www.fmod.org.

4.2) Instructions

	a) Extract the contents of SDL 1.2.x package into the libs/ subfolder. 
	Set the environment variable SDLDIR=<SDL-directory-in-libs>.
	
	b) Install the FMod Ex API and copy the api/ folder into the libs/ subfolder.

	c) Run CMake manually. Go to the release/ sub folder and run.
	> cmake -G "MinGW Makefiles" ../ -DCMAKE_BUILD_TYPE:STRING=Release
   
	Or to build without sound & music run:
	> cmake -G "MinGW Makefiles" ../ -DCMAKE_BUILD_TYPE:STRING=Release -DSOUND=NO

	c) Build with:
	> mingw32-make
   
	d) Create the installation package with:
	> cpack

	c) Extract the produced archive file, e.g., savagewheels-1.5.0-Windows-x86.tar.gz to your 
	desired Games folder.
	
	e) Start the game with:
	> savagewheels  

5) Compiling a Debug version

To build a Debug version to catch a bug or something use the following:

	$ cmake -G "<?> Makefiles" ../ -DCMAKE_BUILD_TYPE:STRING=Debug

